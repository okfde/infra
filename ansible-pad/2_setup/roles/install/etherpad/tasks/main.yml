---

- name: Install required Etherpad packages
  apt:
    pkg: '{{ item }}'
    state: latest
    install_recommends: no
  with_items: "{{ etherpad.basics }}"

- name: Create Etherpad source directory
  file:
    path: '{{ etherpad.src_dir }}'
    state: 'directory'
    owner: '{{ etherpad.user }}'
    group: '{{ etherpad.group }}'
    mode: '0750'

- name: Secure Etherpad home directory
  file:
    path: '{{ etherpad.home }}'
    state: 'directory'
    owner: '{{ etherpad.user }}'
    group: '{{ etherpad.group }}'
    mode: '0750'

- name: Clone Etherpad source code
  git:
    repo: '{{ etherpad.repository_address + "/" + etherpad.repository_name }}'
    dest: '{{ etherpad.src_dir + "/" + etherpad.repository_name }}'
    version: '{{ etherpad.version }}'
    bare: yes
    update: yes
  become: yes
  become_user: '{{ etherpad.user }}'
  register: etherpad_register_source

- name: Check if Etherpad is checked out
  stat:
    path: '{{ etherpad.dest_dir }}'
  register: etherpad_register_directory

- name: Create Etherpad directory
  file:
    path: '{{ etherpad.dest_dir }}'
    state: 'directory'
    owner: '{{ etherpad.user }}'
    group: '{{ etherpad.group }}'
    mode: '0755'
  when: (etherpad_register_source is defined and etherpad_register_source.changed == True) or
        (etherpad_register_directory is defined and etherpad_register_directory.stat.exists == False)

- name: Prepare Etherpad worktree
  template:
    src: 'var/local/etherpad/etherpad/git.j2'
    dest: '{{ etherpad.dest_dir }}/.git'
    owner: '{{ etherpad.user }}'
    group: '{{ etherpad.group }}'
    mode: '0644'
  when: (etherpad_register_source is defined and etherpad_register_source.changed == True) or
        (etherpad_register_directory is defined and etherpad_register_directory.stat.exists == False)

- name: Checkout Etherpad
  command: git checkout --force {{ etherpad.version }}
  args:
    chdir: '{{ etherpad.src_dir + "/" + etherpad.repository_name }}'
  environment:
    GIT_WORK_TREE: '{{ etherpad.dest_dir }}'
  become: yes
  become_user: '{{ etherpad.user }}'
  register: etherpad_register_checkout
  when: (etherpad_register_source is defined and etherpad_register_source.changed == True) or
        (etherpad_register_directory is defined and etherpad_register_directory.stat.exists == False)

- name: Generate Etherpad configuration
  template:
    src: 'var/local/etherpad/etherpad/settings.json.j2'
    dest: '{{ etherpad.dest_dir }}/settings.json'
    owner: '{{ etherpad.user }}'
    group: '{{ etherpad.group }}'
    mode: '0644'

- name: Install Etherpad dependencies
  command: bin/installDeps.sh
  args:
    chdir: '{{ etherpad.dest_dir }}'
    creates: '{{ etherpad.home }}/.node-gyp'
  become: yes
  become_user: '{{ etherpad.user }}'

- name: Manage Etherpad plugins
  npm:
    name: 'ep_{{ item }}'
    path: '{{ etherpad.dest_dir }}'
    state: 'present'
    production: yes
  with_flattened: "{{ etherpad.plugins }}"
  become: yes
  become_user: '{{ etherpad.user }}'
  when: etherpad.plugins is defined and etherpad.plugins

- name: Install etherpad-lite service script
  template:
    src: 'etc/systemd/system/etherpad.service.j2'
    dest: '/etc/systemd/system/etherpad.service'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: "Ensure writeable folders"
  file:
    path: '{{ etherpad.dest_dir }}'
    owner: "{{ etherpad.user }}"
    group: "{{ etherpad.group }}"
    mode: "0755"
    state: directory
    directory_mode: yes
    recurse: yes

- name: Enable etherpad-lite service
  service:
    name: 'etherpad'
    enabled: yes

- name: Ensure that etherpad-lite is restarted
  service:
    name: 'etherpad'
    state: 'restarted'
